{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"smash",
				"smashablesOnConveyor"
			],
			[
				"bradsTabl",
				"bradsTabletYOffset"
			],
			[
				"_addBra",
				"_addBradsTablet"
			],
			[
				"placement",
				"smashablePlacementOdds"
			],
			[
				"conveyor",
				"conveyorDistance"
			],
			[
				"smasha",
				"smashables"
			],
			[
				"conve",
				"conveyorSpeed"
			],
			[
				"background",
				"background-image"
			],
			[
				"nodesize",
				"nodeSize"
			],
			[
				"gutter",
				"gutterSize"
			],
			[
				"font-",
				"font-weight"
			],
			[
				"right",
				"to-right"
			],
			[
				"text",
				"text-align"
			],
			[
				"border-s",
				"border-right-style"
			],
			[
				"in",
				"inline-block"
			],
			[
				"margin",
				"margin-top"
			],
			[
				"font",
				"font-size"
			],
			[
				"Fos",
				"fosphr-glyphs"
			],
			[
				"C",
				"Cycle"
			],
			[
				"News",
				"news-cycle"
			]
		]
	},
	"buffers":
	[
		{
			"file": "index.html",
			"settings":
			{
				"buffer_size": 1344,
				"line_ending": "Unix"
			}
		},
		{
			"file": "css/main.css",
			"settings":
			{
				"buffer_size": 2933,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "define(function(require, exports, module) {\n    var View = require('famous/core/View');\n    var Surface = require('famous/core/Surface');\n    var Transform = require('famous/core/Transform');\n    var Modifier = require('famous/core/Modifier');\n    var StateModifier = require('famous/modifiers/StateModifier');\n    var HeaderFooterLayout = require(\"famous/views/HeaderFooterLayout\");\n    var GridLayout = require(\"famous/views/GridLayout\");\n    var GameEngine = require(\"GameEngine\");\n    var Smashables = require(\"Smashables\");\n\n    /*-- \n        PUBLIC VARIABLE LIST\n        \n\n     --*/\n    \n    /*--- CONSTRUCTION ---*/\n\n    //Prototype constructor\n    function GameView() {\n\n        //Call the upstream constructor with our 'this' pointer and arguments\n        HeaderFooterLayout.apply(this, arguments);\n\n        this.gameObjects = new Object();\n        this.gameObjects.smashables = new Smashables();\n\n        this.gameEngine = new GameEngine(this.gameObjects);\n\n        this.options.headerSize = 60;\n\n        this.contentWindowSize = _getContentWindowSize.call(this);\n\n        _createHeader.call(this);\n        _createGameWorld.call(this);\n        _addSmashables.call(this);\n        _addBrad.call(this);\n\n        this.gameEngine.startGame();\n    }\n\n    //Extend the View prototype and assign our constructor\n    GameView.prototype = Object.create(HeaderFooterLayout.prototype);\n    GameView.prototype.constructor = GameView;\n\n    //Set the default options\n    GameView.DEFAULT_OPTIONS = {\n        headerSize: 100,\n        footerSize: 50\n    };\n\n    /*--- END CONSTRUCTION ---*/\n\n\n    /*--- PRIVATE METHODS ---*/\n\n\n    function _createHeader() {\n\n        this.header.bar = new Surface({\n          size: [undefined, 60],\n          classes: [\"header\"]\n        })\n\n        this.header.gameTitle = new Surface({\n          content: \"Brad's Slapapalooza\",\n          size: [true, true],\n          classes: [\"header\"]\n        });\n\n        this.header.score = new Surface({\n          content: (\"Score: \" + this.gameEngine.score),\n          size: [true, true],\n          classes: [\"header\"]\n        });\n\n        //Grab a reference to the score surface and put it in\n        //gameObjects so it can be changed later.\n        this.gameObjects.score = this.header.score;\n\n        this.header.gameTitleModifier = new Modifier({\n          origin: [0.5, 0.4]\n        });\n\n        this.header.scoreModifier = new Modifier({\n          origin: [0.96, 0.4]\n        });\n\n        this.header.add(this.header.bar);\n        this.header.add(this.header.gameTitleModifier).add(this.header.gameTitle);\n        this.header.add(this.header.scoreModifier).add(this.header.score);\n      \n    }\n\n    function _createGameWorld() {\n        \n        this.content.wall = new Surface({\n          size: [undefined, (this.contentWindowSize[1] * 0.6)],\n          classes: [\"wall\"]\n        });\n\n        this.content.floor = new Surface({\n          size: [undefined, (this.contentWindowSize[1] * 0.4)],\n          classes: [\"floor\"]\n        })\n\n        this.content.floorModifier = new Modifier({\n          origin: [1, 1]\n        });\n\n        this.gameObjects.conveyor = new Surface({\n          size: [880, 220],\n          classes: [\"conveyor\"]\n        });\n\n        this.gameObjects.conveyorModifier = new Modifier({\n          origin: [1, 0.8]\n        });\n\n        this.content.add(this.content.wall);\n        this.content.add(this.content.floorModifier).add(this.content.floor);\n        this.content.add(this.gameObjects.conveyorModifier).add(this.gameObjects.conveyor);\n    }\n\n    function _addSmashables() {\n\n        for(var key in this.gameObjects.smashables.types) {\n\n            for(var j = 0; j < this.gameObjects.smashables.types[key].initialPoolSize; j++) {\n\n                this.content.add(this.gameObjects.smashables.types[key].modifierPool[j])\n                            .add(this.gameObjects.smashables.types[key].surfacePool[j]);\n            }\n        }\n    }\n\n    function _addBrad() {\n\n      var bradsLocation = new Array(-550, 110);\n      var bradsTabletYOffset = 115;\n\n      this.gameObjects.bradsLocation = bradsLocation;\n\n      //How much farther the Tablet is offset on the Y axis from brad\n      this.gameObjects.bradsTabletYOffset = bradsTabletYOffset;\n\n      this.gameObjects.bradModifier = new Modifier({\n        origin: [1, 0],\n        transform : Transform.translate(bradsLocation[0], bradsLocation[1], 0)\n      });\n\n      this.gameObjects.brad = new Surface({\n        size: [101, 400],\n        classes: [\"brad\"]\n      })\n\n      this.gameObjects.bradsTabletModifier = new Modifier({\n        origin: [1, 0],\n        transform : Transform.translate(bradsLocation[0], (bradsLocation[1] + bradsTabletYOffset), 0)\n      });\n\n      this.gameObjects.bradsTablet = new Surface({\n        size: [101, 83],\n        classes: [\"brads-tablet\"]\n      })\n\n      this.content.add(this.gameObjects.bradModifier).add(this.gameObjects.brad);\n      this.content.add(this.gameObjects.bradsTabletModifier).add(this.gameObjects.bradsTablet);\n\n    }\n\n    function _addGameStartScreen() {\n\n      //Set the size and position based on the browser window size\n      var xSize = this.contentWindowSize[0] * 0.8,\n          ySize = this.contentWindowSize[1] * 0.8,\n          xDiff = this.contentWindowSize[0] * 0.2,\n          yDiff = this.contentWindowSize[1] * 0.2;\n\n      this.gameObjects.startScreenModifier = new Modifier({\n        origin: [0, 0],\n        transform : Transform.translate(xDiff, yDiff, 0)\n      });\n\n      this.gameObjects.startScreen = new Surface({\n        content\n        \n        size: [xSize, ySize],\n        classes: [\"start-screen\"]\n      });\n\n    }\n\n    function _addGameoverScreen() {\n\n      //Set the size and position based on the browser window size\n      var xSize = this.contentWindowSize[0] * 0.8,\n          ySize = this.contentWindowSize[1] * 0.8,\n          xDiff = this.contentWindowSize[0] * 0.2,\n          yDiff = this.contentWindowSize[1] * 0.2;\n\n      this.gameObjects.gameoverScreenModifier = new Modifier({\n        origin: [0, 0],\n        transform : Transform.translate(xDiff, yDiff, 0)\n      });\n\n      this.gameObjects.gameoverScreen = new Surface({\n        content: \"GAME OVER! <br /> Score: <br />\"\n        size: [xSize, ySize],\n        classes: [\"gameover-screen\"]\n      });\n\n      \n    }\n\n    function _getContentWindowSize() {\n\n      return Array((window.innerWidth), (window.innerHeight - this.options.headerSize));\n    }\n\n\n\n\n    /*--- END PRIVATE METHODS ---*/\n\n\n    /*--- PUBLIC METHODS ---*/\n\n\n    /*--- END PUBLIC METHODS --*/\n\n    module.exports = GameView;\n});",
			"file": "js/GameView.js",
			"file_size": 6501,
			"file_write_time": 130573044468451720,
			"settings":
			{
				"buffer_size": 6577,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/GameEngine.js",
			"settings":
			{
				"buffer_size": 9746,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/Smashables.js",
			"settings":
			{
				"buffer_size": 5013,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Nodejs/Nodejs.sublime-build",
	"command_palette":
	{
		"height": 306.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Upgrade/Overwrite All Packages"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/casey/src/static-www/lenovo/js/bootstrap.js",
		"/home/casey/src/node/fosphr-famous/views/main/viewjs/TileView.ejs",
		"/home/casey/src/node/fosphr-famous/views/main/viewjs/MainView.ejs",
		"/home/casey/src/static-www/lenovo/lenovo.sublime-project",
		"/home/casey/src/node/fosphr-famous/views/main/viewjs/bootstrap.ejs",
		"/home/casey/src/node/fosphr-famous/views/main/index.ejs",
		"/home/casey/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/casey/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/casey/src/node/fosphr-famous/views/main/viewjs/TileViewTest.ejs",
		"/home/casey/src/node/fosphr-famous/views/main/viewjs/ModdedScrollview.ejs",
		"/home/casey/src/node/fosphr-famous/views/main/viewjs/PageView.ejs",
		"/home/casey/src/node/fosphr-famous/docs/Render Tree.odg",
		"/home/casey/src/node/fosphr-famous/api/controllers/ViewjsController.js",
		"/home/casey/src/node/fosphr-famous/assets/fonts/fosphr-glyphs.woff",
		"/home/casey/src/node/fosphr-famous/assets/fonts/news-cycle.woff",
		"/home/casey/src/node/fosphr-famous/assets/styles/app.css",
		"/home/casey/src/node/fosphr-famous/config/routes.js",
		"/home/casey/src/node/fosphr-famous/views/home/index.ejs",
		"/home/casey/src/node/fosphr-famous/assets/js/main.js",
		"/home/casey/src/node/fosphr-famous/views/main\nmain/viewjs/main.ejs",
		"/home/casey/src/node/fosphrVoteTest/api/controllers/VoteController.js",
		"/home/casey/src/node/fosphrVoteTest/api/controllers/PollController.js",
		"/home/casey/.config/sublime-text-3/Packages/Package Control/Package Control.sublime-settings",
		"/home/casey/.config/sublime-text-3/Packages/Git/Git.sublime-settings",
		"/home/casey/.config/sublime-text-3/Packages/Nodejs/Nodejs.sublime-settings",
		"/home/casey/src/node/fosphr-famous/config/views.js",
		"/home/casey/src/node/fosphr/views/main/index.ejs",
		"/home/casey/src/node/fosphr/views/main/partials/login-register.ejs",
		"/home/casey/src/node/fosphr/assets/linker/styles/fosphr.css",
		"/home/casey/src/node/fosphr/views/main/partials/new-poll.ejs",
		"/home/casey/src/node/fosphr/assets/linker/styles/jquery.mobile.structure-1.4.0-rc.1.css",
		"/home/casey/src/node/fosphr/views/home/index.ejs",
		"/home/casey/.config/sublime-text-3/Packages/User/Distraction Free.sublime-settings",
		"/home/casey/src/node/fosphr/config/routes.js",
		"/home/casey/src/node/fosphr/assets/linker/styles/jquery.mobile.icons.min.css",
		"/home/casey/src/node/fosphr/config/404.js",
		"/home/casey/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/casey/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/casey/src/node/fosphr/.project",
		"/home/casey/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
		"/home/casey/%F"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"contentWin",
			"console",
			"smashableRandomIndex",
			"placementRandomIndex",
			"placementIndexForRandom",
			";\n",
			"smashableNum",
			"smashableType",
			"types.orangeLenovo",
			"this.gameObjects.smashables",
			"dimensions",
			"GameEngine",
			"GameView",
			"MainView",
			"_size",
			"getSize",
			"Tile",
			"RenderNode",
			"transform",
			"RenderNode",
			"RenderNode\n",
			"stateModifier\n",
			"statemo",
			"height",
			"testModif",
			"frontRenderNode",
			"this._objectSequence",
			"this.objectSequence",
			"this.modifiers",
			"this.tileHeightSum",
			"console",
			"this.bottomMargin",
			"this.topMargin",
			"this.tileYSpacing",
			"this.tileMaxXSpacing",
			"this.tileMinXSpacing",
			"this.minGutterSize",
			"this.tileWidth",
			"500",
			"famous",
			"this.scrollDistance",
			"margin",
			"polltiles",
			"topMa",
			");",
			"();\n",
			"nodeSize",
			"WallView",
			"_resolveEvents",
			"WallView",
			"PageView",
			"300",
			"MenuView",
			"MainView",
			"text-shadow",
			"ui-btn",
			"data-overlay",
			".ui-title",
			"ellipsis",
			"invalid",
			".ui-icon-carat",
			".ui-corner-all",
			"login-register",
			"hover",
			"}\n",
			"color:",
			"ui-btn",
			"hover",
			".ui-input-text input,",
			".ui-input-text input, .ui-input-sea",
			".ui-input-text input,text",
			";\n",
			"search",
			"tab",
			"></",
			"s",
			"ul",
			"div",
			"tab"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"smashableIndexForRandom",
			"placementIndexForRandom",
			"index",
			"type",
			"types[smashableType]",
			"this.smashables",
			"size",
			"Smashables",
			"GameEngine",
			"GameView",
			"Poll",
			"ContainerSurface",
			"View",
			"this._nodeSequence",
			"this._objectSequence",
			"this._modifiers",
			"this._tileHeightSum",
			"this.options.bottomMargin",
			"this.options.topMargin",
			"this.options.tileMaxXSpacing",
			"this.options.tileMinXSpacing",
			"this.options.minGutterSize",
			"this.options.tileWidth",
			"this.tileHeightSum",
			"TileView",
			"_setupEventListeners",
			"PollTile",
			"WallView",
			"PageView",
			"MenuView",
			"li",
			"ul"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1344,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "css/main.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2933,
						"regions":
						{
						},
						"selection":
						[
							[
								2419,
								2419
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 714.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "js/GameView.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6577,
						"regions":
						{
						},
						"selection":
						[
							[
								5554,
								5554
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2762.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "js/GameEngine.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9746,
						"regions":
						{
						},
						"selection":
						[
							[
								7994,
								7994
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 4247.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "js/Smashables.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5013,
						"regions":
						{
						},
						"selection":
						[
							[
								4243,
								4243
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2046.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 112.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 112.0
	},
	"project": "lenovo.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
